#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <time.h>
#include <locale.h>
#define pi 3.141592

char msg1[] = "Нижний Новгород НГТУ им.Алексеева\n"
"Лабораторная работа 4. Вариант 2\n"
"Выполнил студент Тихонов Иван , 14-ИВТ-2.\n\n";

/********************* Prototypes of function *********************/
double cos(double);
double sin(double);
double tg(double);
double abs(double);
long long fact(int);
double pow(double, int);
void rnd(unsigned, double*, double*, double*);
double sqrt(double);
/********************* Main function *********************/
int main()
{
	setlocale(LC_ALL, "Russian");
	printf("%s", msg1);

	/********************* Local variables *********************/
	double  dH, dA, dB;
	int iError = 0;
	char cCounter;
	/********************* Code segment *********************/
	printf("1.Задать массив вручную\n2.Заполнить автоматически\n");

	scanf("%c", &cCounter);
	switch (cCounter)
	{
	case '1':
	{
				printf("Введите граничные значения для промежутка [a,b] и шаг дискретизации\n");
				scanf("%lf%lf%lf", &dA, &dB, &dH);
				if (dA >= dB || abs(dH) >= abs(dA - dB))
				{
					printf("Неправильное значение\n");
					iError = 1;
					break;
				}
				printf("х принадлежит [%.3lf;%.3lf]\nшаг дискретизации=%.3lf\n", dA, dB, dH);
				break;
	}

	case '2':
	{
				rnd(time(NULL), &dA, &dB, &dH);
				printf("х принадлежит [%.3lf;%.3lf]\nшаг дискретизации=%.3lf\n", dA, dB, dH);
				break;
	}
	default:
	{
			   printf("Неправильное значение\n");
			   iError = 1;
			   break;
	}
	}

	/***************************************** Output ***********************************************/
	if (iError == 0)
	{
		for (double f = dA; f <= dB; f += dH)
		{
			if (tg(f) < 1)
				printf("x=%6.4lf\ttg(x)=%6.4lf\tf(x)=cos(x)+1\tf(x)=%6.4lf\n", f, tg(f), cos(f) + 1);
			else if (tg(f) >= 1 && tg(f) < 2)
				printf("x=%6.4lf\ttg(x)=%6.4lf\tf(x)=(|sin(x)|)^1/2\tf(x)=%6.4lf\n", f, tg(f), sqrt(abs(sin(f))));
			else
				printf("x=%6.4lf\ttg(x)=%6.4lf\tf(x)=sin(x)+cos(x)\tf(x)=%6.4lf\n", f, tg(f), sin(f) + cos(f));
		}
	}

	return 0;

}
/********************* Function "factorial" *********************/
long long fact(int counter)
{
	long long c = 1;
	for (int i = 2; i <= counter; i++)
	{
		c *= i;
	}
	return c;
}
/********************* Function "mod" *********************/
double abs(double number)
{
	if (number > 0)
		return number;
	else
		return (-1)*number;
}
/********************* Function "power" *********************/
double pow(double x, int y)
{
	if (y == 0)
		return 1;
	double g = x;

	for (int i = 1; i < y; i++)
	{
		x *= g;
	}
	return x;
}
/********************* Function "cos" *********************/
double cos(double arg)
{
	arg -= ((int)(arg / (2 * pi)) * 2 * pi);
	double cnt = 0;
	for (int i = 0, d = 0; i < 22; i += 2, d++)
	{
		if (d % 2 == 0)
			cnt += pow(arg, i) / fact(i);
		else
			cnt -= pow(arg, i) / fact(i);
	}
	return cnt;
}

/********************* Function "sin" *********************/
double sin(double arg)
{
	arg -= ((int)(arg / (2 * pi)) * 2 * pi);
	double cnt = 0;
	for (int i = 1, d = 0; i < 22; i += 2, d++)
	{
		if (d % 2 == 0)
			cnt += pow(arg, i) / fact(i);
		else
			cnt -= pow(arg, i) / fact(i);
	}
	return cnt;
}

/********************* Function "tg" *********************/
double tg(double number)
{
	if (number != pi / 2)
		return sin(number) / cos(number);
	else
		printf("значения тангенса не существует");
}
/********************* Function "randomize" *********************/
void rnd(unsigned time, double *A, double *B, double *H)
{
	int m = 600000, a = 16, c = 3;
	long long r = time*time;
	r = -300000 + (long long)((a * abs(r)) + c) % m;
	*A = r / 1000.;
	while (*B <= *A)
	{
		r = -300000 + (long long)((a * abs(r)) + c) % m;
		*B = r / 1000.;
	}
	while (abs(*H) >= abs(*B - *A))
	{
		r = -300000 + (long long)((a * abs(r)) + c) % m;
		*H = abs(r) / 1000.;
	}

}
/********************* Function "sqrt" *********************/
double sqrt(double number)
{
	double cnt = number, cnt1;
	for (int i = 0; i < 50; i++){
		cnt1 = 1 / 2.*(cnt + number / cnt);
		cnt = cnt1;
	}
	return cnt;
}
